<tal:block tal:condition="view/tip">
<div id="page-help" i18n:translate="">Page Tips</div>
<textarea id="page-help-title" style="display:none" tal:content="view/tip/title" class="dontexpand"/>
<textarea id="page-help-tip" style="display:none" tal:content="view/tip/tip" class="dontexpand"/>
<script>
Ext.onReady(function(){
    var toolTip = new Ext.ToolTip({
        id: 'page-level-help-tip',
        autoHide: false,
        closable: true,
        draggable: true,
        width: 440,
        showDelay: 0,
        target: 'page-help',
        title: Ext.get('page-help-title').dom.innerHTML,
        items: [{
            xtype: 'box',
            id: 'page-level-help-content',
            autoScroll: true,
            html: Ext.get('page-help-tip').dom.value
        }],
        listeners: {
            hide: function(toolTip) {
                toolTip.target.show();
            }
        },
        show: Ext.ToolTip.prototype.show.createSequence(function(){
            Ext.fly('page-level-help-tip').alignTo(toolTip.target, 'tr-tr');
            var content = Ext.fly('page-level-help-content');
            content.setHeight(Math.min(content.getHeight(), Ext.getBody().getViewSize().height - 100));
            this.target.hide();
        }),
        initTarget: function(target) {
            // override method from ToolTip to monitor click instead of
            // mouseover, mouseout, and mousemove
            var t;
            if((t = Ext.get(target))){
                if(this.target){
                    var tg = Ext.get(this.target);
                    this.mun(tg, 'click', this.onTargetOver, this);
                }
                this.mon(t, {
                    click: this.onTargetOver,
                    scope: this
                });
                this.target = t;
            }
            if(this.anchor){
                this.anchorTarget = this.target;
            }
        }
    });
});
</script>
</tal:block>
