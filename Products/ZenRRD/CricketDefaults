#
# Top Level Defaults
#

Target	--default--
	dataDir			    = %auto-base%/../cricket-data/%auto-target-path%
	rrd-datafile		= %dataDir%/%auto-target-name%.rrd
	rrd-poll-interval	= 300
	snmp			    = %snmp-community%@%snmp-host%:%snmp-port%
	trap-address		= g04par!@cvtraps.srv.hcvlny.cv.net
	persistent-alarms	= true

OID	sysUptime  			1.3.6.1.2.1.1.3.0
OID	ifNumber   			1.3.6.1.2.1.2.1.0


# rra
#
# The RRA dictionary specifies the config of the datafiles on disk.
# Unles you really know what you are doing, don't muck around with these.
# Trust me, the defaults will do what you want.

# this set of RRA's exactly duplicates the storage capacity of a
# rateup logfile (this assumes rrd-poll-interval is 300 (5 min))

# The second field (0.5, below) is NEW as of RRD 0.99. It
# is the xfiles-factor, which used to be in the target
# dictionary.

# one point per 5 minutes, spanning 50 hours
rra		5minAve	    AVERAGE:0.5:1:600	   
# one point per 30 minutes, spanning 12 days
rra		30minAve	AVERAGE:0.5:6:600     
# one point every 2 hours, spanning 50 days
rra		2hrAve		AVERAGE:0.5:24:600    
rra		2hrMax		MAX:0.5:24:600
# one point every day, spanning 600 days
rra		1dayAve		AVERAGE:0.5:288:600 
rra		1dayMax		MAX:0.5:288:600

# we will add datasources to each specific target-type later
targetType	--default--
	rra	=	"5minAve, 30minAve, 2hrAve, 2hrMax, 1dayAve, 1dayMax"

# map
#
# This dict is used to control the instance mapping code.
# See the docs for more information about the map dictionary.

map interface-name
    base-oid    =   ifDescr
    match       =   %interface-name%

# This is a neat map that will let you tie Cricket target
# names to the extended interface descriptions that Ciscos
# support (called "aliases" by the MIB). For example, 
# if your target name is "corporate-ds3", then do
# this on your Cisco:
#
#	router#config term
#	router(config)#int Hssi/0/0/0
#	router(config-if)#description [corporate-ds3] 45 Mbps DS3 to Corporate
#	router(config-if)#^Z
#
# And set inst to "map(alias-matches-target)" for that target.

map alias-matches-target
    base-oid    =   ifAlias
    match       =   /^.*\\[%auto-target-name%\\].*$/


# The HTML dict has bits and pieces of HTML that gets used
# by the grapher.

html	body-options	bgcolor=white

html	page-header
    <!-- you could put your company logo on every page here: -->
    <!-- <img src="images/company-logo.gif" align=left> -->
    <h1>%auto-title%</h1>
    <br clear=left>

html    contact-name  <pre></pre>
  
html    contact  <pre></pre>

html 	page-footer  <pre></pre>

html	head
	    <title>%auto-title%</title>

# Colors are in HTML #RRGGBB format, without the #
# I'm not very creative. Cool color schemes would be a welcome addition.

color	dark-green	00cc00
color	blue		0000ff
color	red			ff0000
color	cyan		00ffff
color	magenta		ff00ff
color	yellow		ffff00
color	dark-red	cc0000
color	dark-blue	0000cc
# thanks to Shannon Reis <sreis@fastlane.net> for these
color   cornflower      0080C0 
color   light-purple    8080C0 
color   pink            FF0080 
color   purple          800080 
color   deep-blue       0000A0 
color   green           408080 
color   brown           808000 
color   black           000000 
color   neongrn         00FF00 
color   skyblue         0080FF 
color   orange          FF8000 
color   burntorng       800000 
color   purply          FB31FB 

# this tells the grapher which colors to choose first, if
# it was not given colors
color	--order--		"dark-green, blue, red, cyan, magenta, yellow,
	dark-red, dark-blue, cornflower, light-purple, pink, purple,
	deep-blue, green, brown, black, neongrn, skyblue, orange, burntorng
	purply"

# events can be associated with a target, and then those
# events will be marked on the graph.

event   --default--
    color   =   magenta

event   test
    name    =   "Events were added to Cricket"
    date    =   "6/2/99 14:30"

