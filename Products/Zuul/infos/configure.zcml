<!--
###########################################################################
#
# This program is part of Zenoss Core, an open source monitoring platform.
# Copyright (C) 2009, Zenoss Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# For complete information please visit: http://www.zenoss.com/oss/
#
###########################################################################
-->

<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:five="http://namespaces.zope.org/five">

    <!-- Tree node adapters -->
    <adapter factory=".process.ProcessNode"
             for="..interfaces.IProcessEntity"
             provides="..interfaces.IProcessNode"/>

    <adapter factory=".device.DeviceOrganizerNode"
             for="Products.ZenModel.DeviceOrganizer.DeviceOrganizer"
             provides="..interfaces.IDeviceOrganizerNode"/>

    <adapter provides="..interfaces.IMarshaller"
             for="..interfaces.IDeviceOrganizerNode"
             factory=".device.DeviceOrganizerTreeNodeMarshaller"
             />

    <adapter factory=".template.TemplateNode"
             for="Products.ZenModel.RRDTemplate.RRDTemplate"
             provides="..interfaces.ITemplateNode"/>

    <adapter factory=".template.TemplateLeaf"
             for="Products.ZenModel.RRDTemplate.RRDTemplate"
             provides="..interfaces.ITemplateLeaf"/>

    <adapter factory=".template.RRDDataSourceInfo"
             for="Products.ZenModel.RRDDataSource.RRDDataSource"
             provides="..interfaces.IRRDDataSourceInfo"/>

    <adapter factory=".template.ThresholdInfo"
             for="Products.ZenModel.ThresholdClass.ThresholdClass"
             provides="..interfaces.IThresholdInfo"/>

    <adapter factory=".template.MinMaxThresholdInfo"
             for="Products.ZenModel.MinMaxThreshold.MinMaxThreshold"
             provides="..interfaces.IMinMaxThresholdInfo"/>

    <adapter factory=".template.GraphInfo"
             for="Products.ZenModel.GraphDefinition.GraphDefinition"
             provides="..interfaces.IGraphInfo"/>



    <adapter factory=".template.DataPointInfo"
             for="Products.ZenModel.RRDDataPoint.RRDDataPoint"
             provides="..interfaces.IDataPointInfo"/>

    <adapter factory=".template.BasicDataSourceInfo"
             for="Products.ZenModel.BasicDataSource.BasicDataSource"
             provides="..interfaces.IBasicDataSourceInfo"/>

    <adapter factory=".template.PingDataSourceInfo"
             for="Products.ZenModel.PingDataSource.PingDataSource"
             provides="..interfaces.IPingDataSourceInfo"/>

    <adapter factory=".template.DataPointAliasInfo"
             for="Products.ZenModel.RRDDataPointAlias.RRDDataPointAlias"
             provides="..interfaces.IDataPointAlias"/>

    <adapter provides="..interfaces.IInfo"
             for="..interfaces.IProcessEntity"
             factory=".process.ProcessInfo"
             />

    <adapter factory=".command.UserCommandInfo"
             for="Products.ZenModel.UserCommand.UserCommand"
             provides="..interfaces.IUserCommandInfo"/>

    <adapter provides="..interfaces.IInfo"
             for="..interfaces.IComponent"
             factory=".component.ComponentInfo"
             />

    <adapter factory=".service.IpServiceClassInfo"
             provides="..interfaces.IIpServiceClassInfo"
             for="Products.ZenModel.IpServiceClass.IpServiceClass"
             />

    <adapter factory=".service.WinServiceClassInfo"
             provides="..interfaces.IWinServiceClassInfo"
             for="Products.ZenModel.WinServiceClass.WinServiceClass"
             />

    <adapter factory=".service.ServiceOrganizerInfo"
             provides="..interfaces.IServiceOrganizerInfo"
             for="Products.ZenModel.ServiceOrganizer.ServiceOrganizer"
             />

    <adapter factory=".service.ServiceOrganizerNode"
             provides="..interfaces.IServiceOrganizerNode"
             for="Products.ZenModel.ServiceOrganizer.ServiceOrganizer"
             />

    <adapter provides="..interfaces.IDeviceInfo"
             for="..interfaces.IDevice"
             factory=".device.DeviceInfo"
             />

    <adapter provides="..interfaces.IDeviceOrganizerInfo"
             for="Products.ZenModel.DeviceOrganizer.DeviceOrganizer"
             factory=".device.DeviceOrganizerInfo"
             />

    <adapter provides="..interfaces.IInfo"
             for="Products.ZenModel.ZenModelRM.ZenModelRM"
             factory=".InfoBase"
             />

    <adapter provides="..interfaces.IIpNetworkInfo"
             for="Products.ZenModel.IpNetwork.IpNetwork"
             factory=".network.IpNetworkInfo"
             />

    <adapter provides="..interfaces.IIpNetworkNode"
             for="Products.ZenModel.IpNetwork.IpNetwork"
             factory=".network.IpNetworkNode"
             />

    <adapter provides="..interfaces.IIpAddressInfo"
             for="Products.ZenModel.IpAddress.IpAddress"
             factory=".network.IpAddressInfo"
             />

    <adapter factory=".mib.MibInfo"
             provides="..interfaces.IMibInfo"
             for="Products.ZenModel.MibModule.MibModule"
             />

    <adapter factory=".mib.MibOrganizerInfo"
             provides="..interfaces.IMibOrganizerInfo"
             for="Products.ZenModel.MibOrganizer.MibOrganizer"
             />

    <adapter factory=".mib.MibOrganizerNode"
             provides="..interfaces.IMibOrganizerNode"
             for="Products.ZenModel.MibOrganizer.MibOrganizer"
             />

    <adapter provides="..interfaces.IOrganizerInfo"
             for="Products.ZenModel.Organizer.Organizer"
             factory=".organizer.OrganizerInfo"
             />

    <adapter provides="..interfaces.ILocationOrganizerInfo"
             for="Products.ZenModel.Location.Location"
             factory=".organizer.LocationOrganizerInfo"
             />
    
    <adapter provides="..interfaces.INotificationSubscriptionInfo"
             for="Products.ZenModel.NotificationSubscription.NotificationSubscription"
             factory=".triggers.NotificationSubscriptionInfo"
             />
    
    <adapter provides="Products.Zuul.interfaces.INotificationWindowInfo"
             for="Products.ZenModel.NotificationSubscriptionWindow.NotificationSubscriptionWindow"
             factory="Products.Zuul.infos.triggers.NotificationWindowInfo"
             />

    <include package=".component"/>
    <include file="graphpoint.zcml"/>
</configure>
