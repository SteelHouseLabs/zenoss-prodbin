<!--
###########################################################################
#
# This program is part of Zenoss Core, an open source monitoring platform.
# Copyright (C) 2009, Zenoss Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# For complete information please visit: http://www.zenoss.com/oss/
#
###########################################################################
-->

<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:five="http://namespaces.zope.org/five">

    <five:implements 
        interface=".interfaces.IProcessEntity"
        class="Products.ZenModel.OSProcessClass.OSProcessClass"
        />

    <five:implements 
        interface=".interfaces.IProcessEntity"
        class="Products.ZenModel.OSProcessOrganizer.OSProcessOrganizer"
        />

    <five:implements 
        interface=".interfaces.IDeviceClass"
        class="Products.ZenModel.DeviceClass.DeviceClass"
        />

    <five:implements 
        interface=".interfaces.IDevice"
        class="Products.ZenModel.Device.Device"
        />

    <utility factory=".facades.EventFacade"
             provides=".interfaces.IEventFacade"
             />

    <utility factory=".facades.ProcessFacade"
             provides=".interfaces.IProcessFacade"
             />

    <utility component=".utils.get_dmd"
             provides=".interfaces.IDataRootFactory"
             />
             

    <adapter provides=".interfaces.ISerializableFactory"
             for=".interfaces.ITreeNode"
             factory=".tree.SerializableTreeFactory"
             />

    <!-- Tree node adapters -->
    <adapter factory=".facades.processfacade.ProcessNode" 
             for=".interfaces.IProcessEntity"
             provides=".interfaces.IProcessNode"/>

    <adapter factory=".facades.devicefacade.DeviceClassNode"
             for=".interfaces.IDeviceClass"
             provides=".interfaces.IDeviceClassNode"/>

     <adapter provides=".interfaces.IInfo"
              for=".interfaces.IProcessEntity"
              factory=".facades.processfacade.ProcessInfo"
              />

     <adapter provides=".interfaces.IInfo"
              for=".interfaces.IDeviceClass"
              factory=".facades.devicefacade.DeviceClassInfo"
              />

     <adapter provides=".interfaces.IMonitoringInfo"
              for=".interfaces.IProcessEntity"
              factory=".facades.processfacade.MonitoringInfo"
              />

     <adapter provides=".interfaces.ISerializableFactory"
              for=".interfaces.IProcessInfo"
              factory=".facades.processfacade.SerializableProcessInfoFactory"
              />
              
     <adapter provides=".interfaces.ISerializableFactory"
              for=".interfaces.IMonitoringInfo"
              factory=".facades.processfacade.SerializableMonitoringInfoFactory"
              />

     <adapter provides=".interfaces.IDeviceInfo"
              for=".interfaces.IDevice"
              factory=".facades.devicefacade.DeviceInfo"
              />

     <adapter provides=".interfaces.ISerializableFactory"
              for=".interfaces.IDeviceInfo"
              factory=".facades.devicefacade.SerializableDeviceInfoFactory"
              />

</configure>
