<?xml version="1.0"?>
<objects>
<object id='/zport/dmd/Events' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
status
</property>
<property visible="True" type="int" id="zEventSeverity" >
-1
</property>
<object id='Status' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Heartbeat' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Ping' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='WinEventlog' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Snmp' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='XmlRpc' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Perf' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Update' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='OSProcess' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='IpService' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Web' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Wmi' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Conn' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
</object>
<object id='Http' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Database' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Web' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
</object>
<object id='Unknown' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Security' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Login' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Exit' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="lines" id="zEventClearClasses" >
['/Security/Conn/Open']
</property>
<tomanycont id='instances'>
<object id='dropbear' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
dropbear
</property>
<property type="int" id="sequence" mode="w" >
3
</property>
<property type="string" id="regex" mode="w" >
exit after auth \((?P&lt;eventKey&gt;\w+)\): Exited normally
</property>
<property type="string" id="example" mode="w" >
exit after auth (root): Exited normally
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Login/Exit'/>
</object>
</tomanycont>
</object>
<object id='Success' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="lines" id="zEventClearClasses" >
['/Security/Login/BadPassword', '/Security/Login/Failure']
</property>
<tomanycont id='instances'>
<object id='dropbear' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
dropbear
</property>
<property type="int" id="sequence" mode="w" >
2
</property>
<property type="string" id="regex" mode="w" >
password auth succeeded for '(?P&lt;eventKey&gt;\w+)'
</property>
<property type="string" id="example" mode="w" >
password auth succeeded for 'root'
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Login/Success'/>
</object>
<object id='dropbear_pubkey' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
dropbear
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
pubkey auth succeeded for '(?P&lt;username&gt;\S+)' with key md5 (?P&lt;key&gt;\S+) from (?P&lt;eventKey&gt;\S+):(?P&lt;remotePort&gt;\S+)
</property>
<property type="string" id="example" mode="w" >
pubkey auth succeeded for 'root' with key md5 41:61:33:cc:73:61:53:ad:0e:6d:62:f5:56:c1:e7:ba from 1.1.1.1:55609
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Login/Success'/>
</object>
<object id='sshd' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
sshd
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
Accepted password for (?P&lt;eventKey&gt;\S+) from (?P&lt;remoteIp&gt;\S+) port (?P&lt;port&gt;\d+) (?P&lt;protocol&gt;\S+)
</property>
<property type="string" id="example" mode="w" >
Accepted password for edahl from 1.1.1.1 port 53480 ssh2
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Login/Success'/>
</object>
</tomanycont>
</object>
<object id='NoUser' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_severity" >
2
</property>
<tomanycont id='instances'>
<object id='dropbear' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
dropbear
</property>
<property type="int" id="sequence" mode="w" >
6
</property>
<property type="string" id="regex" mode="w" >
login attempt for nonexistent user from (?P&lt;eventKey&gt;\S+):\d+
</property>
<property type="string" id="example" mode="w" >
login attempt for nonexistent user from 1.1.1.1:41448
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Login/NoUser'/>
</object>
</tomanycont>
</object>
<object id='BadPass' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_severity" >
2
</property>
<tomanycont id='instances'>
<object id='dropbear' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
dropbear
</property>
<property type="int" id="sequence" mode="w" >
4
</property>
<property type="string" id="regex" mode="w" >
bad password attempt for '(?P&lt;eventKey&gt;\w+)'
</property>
<property type="string" id="example" mode="w" >
bad password attempt for 'root'
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Login/BadPass'/>
</object>
<object id='sshd' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
sshd
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
Failed password for (?P&lt;eventKey&gt;\S+) from (?P&lt;remoteIp&gt;\S+) port (?P&lt;remotePort&gt;\d+) (?P&lt;protocol&gt;\S+)
</property>
<property type="string" id="example" mode="w" >
Failed password for edahl from 1.1.1.1 port 53529 ssh2
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Login/BadPass'/>
</object>
</tomanycont>
</object>
<object id='Fail' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_severity" >
4
</property>
<tomanycont id='instances'>
<object id='dropbear' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
dropbear
</property>
<property type="int" id="sequence" mode="w" >
5
</property>
<property type="string" id="regex" mode="w" >
exit before auth \(user '(?P&lt;eventKey&gt;\S+)', (?P&lt;failures&gt;\S+) fails\): Max auth tries reached
</property>
<property type="string" id="example" mode="w" >
exit before auth (user 'root', 3 fails): Max auth tries reached - user root
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Login/Fail'/>
</object>
</tomanycont>
</object>
</object>
<object id='Sudo' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='sudo' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
sudo
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
(?P&lt;username&gt;\S+) : TTY=(?P&lt;tty&gt;\S+) ; PWD=(?P&lt;pwd&gt;\S+) ; USER=(?P&lt;targetUser&gt;\S+) ; COMMAND=(?P&lt;command&gt;.*)
</property>
<property type="string" id="example" mode="w" >
edahl : TTY=pts/4 ; PWD=/home/edahl ; USER=root ; COMMAND=/bin/su -
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Sudo'/>
</object>
</tomanycont>
</object>
<object id='Conn' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Open' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_severity" >
2
</property>
<tomanycont id='instances'>
<object id='dropbear' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
dropbear
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
Child connection from (?P&lt;eventKey&gt;\S+):\d+
</property>
<property type="string" id="example" mode="w" >
Child connection from 1.1.1.1:55107
</property>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Conn/Open'/>
</object>
<object id='sshd_pam_unix' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
sshd(pam_unix)
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
session opened for user (?P&lt;eventKey&gt;\S+) by \(uid=(?P&lt;uid&gt;\d+)\)
</property>
<property type="string" id="example" mode="w" >
session opened for user edahl by (uid=500)
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Conn/Open'/>
</object>
<object id='ultravnc' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
ultravnc_1
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
(?P&lt;summary&gt;Connection received from (?P&lt;eventKey&gt;\S+))
</property>
<property type="string" id="example" mode="w" >
29/11/2005 16:12 Connection received from 1.1.1.1
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Conn/Open'/>
</object>
</tomanycont>
</object>
<object id='Close' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="lines" id="zEventClearClasses" >
['/Security/Conn/Open']
</property>
<tomanycont id='instances'>
<object id='dropbear' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
dropbear
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
<property type="string" id="regex" mode="w" >
exit before auth \(user '(?P&lt;eventKey&gt;\w+)'.*: Exited normally
</property>
<property type="string" id="example" mode="w" >
exit before auth (user 'root', 1 fails): Exited normally
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Conn/Close'/>
</object>
<object id='dropbear_reset' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
dropbear
</property>
<property type="int" id="sequence" mode="w" >
8
</property>
<property type="string" id="regex" mode="w" >
^exit before auth:
</property>
<property type="string" id="example" mode="w" >
exit before auth: error reading: Connection reset by peer
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Conn/Close'/>
</object>
<object id='sshd_pam_unix' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
sshd(pam_unix)
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
session closed for user (?P&lt;eventKey&gt;\S+)
</property>
<property type="string" id="example" mode="w" >
session closed for user edahl
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Conn/Close'/>
</object>
<object id='ultravnc' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
ultravnc_3
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
(?P&lt;summary&gt;Client (?P&lt;remoteIp&gt;\S+) disconnected)
</property>
<property type="string" id="example" mode="w" >
29/11/2005 16:16 Client 1.1.1.1 disconnected
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Security/Conn/Close'/>
</object>
</tomanycont>
</object>
</object>
</object>
<object id='Ignore' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
drop
</property>
<tomanycont id='instances'>
<object id='CROND' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
CROND
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
\(root\) CMD \(run-parts /etc/cron.\S+\)
</property>
<property type="string" id="example" mode="w" >
(root) CMD (run-parts /etc/cron.hourly)
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore'/>
</object>
<object id='anacron' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
anacron
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
Updated timestamp for job
</property>
<property type="string" id="example" mode="w" >
Updated timestamp for job `cron.daily' to 2005-12-13
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore'/>
</object>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
message repeated \d+ times
</property>
<property type="string" id="example" mode="w" >
message repeated 2 times
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore'/>
</object>
<object id='kernel' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
kernel
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="rule" mode="w" >
evt.priority&gt;4
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore'/>
</object>
<object id='kernel_capture_card' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
kernel
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
Setting full NTSC height|Hpsc: 0x00001|ivtv: Got DMA-done
</property>
<property type="string" id="example" mode="w" >
Setting full NTSC height
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore'/>
</object>
<object id='sendmail' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
sendmail
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="rule" mode="w" >
evt.priority&gt;5
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore'/>
</object>
<object id='syslog' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
syslog
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
Time update:
</property>
<property type="string" id="example" mode="w" >
Time update: 20051208 18:13:13
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore'/>
</object>
</tomanycont>
<object id='Win' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='MSExchangeIS Mailbox Store_1173' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
MSExchangeIS Mailbox Store_1173
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
Error 0x6bb deleting unused restricted view from folder 1-C8EA27F on database "First Storage Group\Mailbox Store (BOX)". Microsoft Exchange Information Store will try to delete the view again at the next maintenance interval.   For more information, click http://www.microsoft.com/contentredirect.asp.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore/Win'/>
</object>
<object id='MSExchangeTransport_3005' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
MSExchangeTransport_3005
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
A non-delivery report with a status code of 4.4.6 was generated for recipient email@email.com (Message-ID email@email.com&gt;). Cause: The maximum hop count was exceeded for this message. This non-delivery report can also be caused if a looping condition exists between sending and receiving servers that are not in the same Exchange organization. In this situation, the message bounces back and forth until the hop count is exceeded. A configuration error in the e-mail system can also cause the message to bounce between two servers or to be forwarded between two recipients. Solution: The maximum hop count is a property set on each virtual server and you can manually override it. The default maximum hop count is 15. Also, check for any situations that might cause loops between servers.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore/Win'/>
</object>
<object id='MetaframeEvents_1106' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
MetaframeEvents_1106
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
Client printer auto-creation failed.  The driver could not be installed. Possible reasons for the failure: The driver is not in the list of drivers on the server. The driver cannot be located. The driver has not been mapped. Client name: (BOX) Printer: (Client\BOX#\Plant Ops - Kyocera Mita KM-1650 KX - 1.1.1.1)  Printer driver: (Kyocera Mita KM-1650 KX)
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore/Win'/>
</object>
<object id='Removable Storage Service_102' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
Removable Storage Service_102
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
Unable to register COM class objects.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore/Win'/>
</object>
<object id='Symantec Mail Security for SMTP_2' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
Symantec Mail Security for SMTP_2
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
Error 0 receiving data from remote host. (1.1.1.1)
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore/Win'/>
</object>
<object id='TermServDevices_1106' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
TermServDevices_1106
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
The printer could not be installed.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore/Win'/>
</object>
<object id='TermServDevices_1111' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
TermServDevices_1111
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
Driver ActiveTouch Document Loader required for printer ActiveTouch Document Loader is unknown. Contact the administrator to install the driver before you log in again.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Ignore/Win'/>
</object>
</tomanycont>
</object>
</object>
<object id='Heartbeat' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_timeout" >
1400
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
-- MARK --
</property>
<property type="string" id="example" mode="w" >
-- MARK --
</property>
<property visible="True" type="None" id="zEvent_timeout" >
1400
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Heartbeat'/>
</object>
<object id='evtsys' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
evtsys
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
-- MARK --
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Heartbeat'/>
</object>
</tomanycont>
</object>
<object id='App' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_severity" >
2
</property>
<object id='Start' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="lines" id="zEventClearClasses" >
['/App/Stop']
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
3
</property>
<property type="string" id="regex" mode="w" >
start.*succeeded
</property>
<property type="string" id="example" mode="w" >
httpd startup succeeded
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Start'/>
</object>
<object id='ntsyslog' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
ntsyslog_0
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
Service started.
</property>
<property type="string" id="example" mode="w" >
Service started.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Start'/>
</object>
</tomanycont>
</object>
<object id='Stop' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_severity" >
2
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
2
</property>
<property type="string" id="regex" mode="w" >
(shutdown|stop).*succeeded
</property>
<property type="string" id="example" mode="w" >
httpd shutdown succeeded
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Stop'/>
</object>
<object id='ntsyslog' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
ntsyslog_0
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
Service shutdown.
</property>
<property type="string" id="example" mode="w" >
Service shutdown.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Stop'/>
</object>
</tomanycont>
</object>
<object id='Failed' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Reload' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
4
</property>
<property type="string" id="regex" mode="w" >
\S+ -HUP succeeded
</property>
<property type="string" id="example" mode="w" >
http -HUP succeeded
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Reload'/>
</object>
<object id='postfix' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
postfix
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
succeeded
</property>
<property type="string" id="example" mode="w" >
succeeded
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Reload'/>
</object>
</tomanycont>
</object>
<object id='Log' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='CROND' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
CROND
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
\((?P&lt;username&gt;\S+)\) CMD \((?P&lt;command&gt;.*)\)
</property>
<property type="string" id="example" mode="w" >
(root) CMD (run-parts /etc/cron.hourly)
</property>
<property type="text" id="explanation" mode="w" >
(mythtv) CMD (/usr/bin/mythfilldatabase&gt;/dev/null 2&gt;&amp;1)
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Log'/>
</object>
<object id='pmta' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
pmta
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Log'/>
</object>
<object id='postfix_smtpd' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
postfix/smtpd
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
warning: (?P&lt;eventKey&gt;\S+):
</property>
<property type="string" id="example" mode="w" >
warning: 1.1.1.1: hostname pcp0010796240pcs.anapol01.md.comcast.net verification failed: Host not found
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Log'/>
</object>
<object id='procmail' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
procmail
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
Descriptor 1 was not open
</property>
<property type="string" id="example" mode="w" >
Descriptor 1 was not open
</property>
<property visible="True" type="None" id="zEvent_severity" >
2
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Log'/>
</object>
</tomanycont>
</object>
<object id='Email' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='smtpsvc_5000' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
smtpsvc_5000
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
The message file '.*'  in the queue directory '(?P&lt;eventkey&gt;.*)' is corrupt and has not been enumerated.
</property>
<property type="string" id="example" mode="w" >
The message file 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue\NTFS_584fe40801c5f24800007253.EML'  in the queue directory 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue' is corrupt and has not been enumerated.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/App/Email'/>
</object>
</tomanycont>
</object>
<object id='Conn' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Max' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_severity" >
3
</property>
</object>
</object>
</object>
<object id='Net' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='DNS' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='DNS_3000' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
DNS_3000
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
The DNS server has encountered numerous run-time events. To determine the initial cause of these run-time events, examine the DNS server event log entries that precede this event. To prevent the DNS server from filling the event log too quickly, subsequent events with Event IDs higher than 3000 will be suppressed until events are no longer being generated at a high rate.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Net/DNS'/>
</object>
<object id='DNS_6525' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
DNS_6525
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
A zone transfer request for the secondary zone domain.com was refused by the master DNS server at 1.1.1.1. Check the zone at the master server 1.1.1.1 to verify that zone transfer is enabled to this server.  To do so, use the DNS console, and select master server 1.1.1.1 as the applicable server, then in secondary zone domain.com Properties, view the settings on the Zone Transfers tab.  Based on the settings you choose, make any configuration adjustments there (or possibly in the Name Servers tab) so that a zone transfer can be made to this server.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Net/DNS'/>
</object>
<object id='DNS_6527' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
DNS_6527
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
Zone domain.com expired before it could obtain a successful zone transfer or update from a master server acting as its source for the zone.  The zone has been shut down.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Net/DNS'/>
</object>
</tomanycont>
</object>
<object id='Time' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='W32Time_22' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
W32Time_22
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
The time provider NtpServer encountered an error while digitally signing the  NTP response for peer 1.1.1.1:123.  NtpServer cannot provide secure (signed) time to the client and will ignore the request. The error was: The specified user does not exist. (0x80070525)
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Net/Time'/>
</object>
</tomanycont>
</object>
<object id='Link' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='LINK-3-UPDOWN' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
LINK-3-UPDOWN
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
Interface (?P&lt;component&gt;[^\s]+), changed state to down
</property>
<property type="string" id="example" mode="w" >
Interface FastEthernet2, changed state to down
</property>
<property visible="True" type="int" id="zEventSeverity" >
3
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Net/Link'/>
</object>
<object id='LINK-3-UPDOWN_UP' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
LINK-3-UPDOWN
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
Interface (?P&lt;component&gt;[^\s]+), changed state to up
</property>
<property type="string" id="example" mode="w" >
Interface FastEthernet2, changed state to up
</property>
<property visible="True" type="int" id="zEventSeverity" >
0
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Net/Link'/>
</object>
</tomanycont>
</object>
<object id='DHCP' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Ack' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="lines" id="zEventClearClasses" >
['/Net/Dhcp/Request']
</property>
<tomanycont id='instances'>
<object id='udhcpd' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
udhcpd
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
sending ACK of (?P&lt;eventKey&gt;\S+) to (?P&lt;macaddress&gt;\S+)
</property>
<property type="string" id="example" mode="w" >
sending ACK of 1.1.1.1 to 00:0d:93:7e:96:7f
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Net/DHCP/Ack'/>
</object>
</tomanycont>
</object>
<object id='Inform' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Obtained' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='udhcpc' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
udhcpc
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
Lease of (?P&lt;eventKey&gt;\S+) obtained, lease time (?P&lt;leaseTime&gt;\d+)
</property>
<property type="string" id="example" mode="w" >
Lease of 1.1.1.1 obtained, lease time 343822
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Net/DHCP/Obtained'/>
</object>
</tomanycont>
</object>
<object id='Request' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='udhcpd' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
udhcpd
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
<property type="string" id="regex" mode="w" >
received REQUEST for (?P&lt;eventKey&gt;\S+) from (?P&lt;macaddress&gt;\S+)
</property>
<property type="string" id="example" mode="w" >
received REQUEST for 1.1.1.1 from 00:0d:93:7e:96:7f
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Net/DHCP/Request'/>
</object>
</tomanycont>
</object>
</object>
</object>
<object id='Win' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='NetBios' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_severity" >
3
</property>
<tomanycont id='instances'>
<object id='BROWSER_8021' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
BROWSER_8021
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
The browser was unable to retrieve a list of servers from the browser master \\SERVER on the network \Device\NetBT_Tcpip_{D160DC6C-96D6-4C96-8F04-F6FEA5E9089B}. The data is the error code.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Win/NetBios'/>
</object>
<object id='MRxSmb_8003' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
MRxSmb_8003
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
from the computer (?P&lt;eventKey&gt;\S+) that believes
</property>
<property type="string" id="example" mode="w" >
The master browser has received a server announcement from the computer BOX that believes that it is the master browser for the domain on transport NetBT_Tcpip_{2573E4DB-14E7-4292-82. The master browser is stopping or an election is being forced.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Win/NetBios'/>
</object>
<object id='Userenv_1000' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
Userenv_1000
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
Windows cannot obtain the domain controller name for your computer network. Return value (59).
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Win/NetBios'/>
</object>
</tomanycont>
</object>
<object id='evtsys' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="None" id="zEvent_severity" >
2
</property>
<tomanycont id='instances'>
<object id='evtsys' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
evtsys
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
Eventlog to Syslog Service
</property>
<property type="string" id="example" mode="w" >
Eventlog to Syslog Service Started: Version 3.4.1
</property>
<toone id='eventClass' objid='/zport/dmd/Events/Win/evtsys'/>
</object>
</tomanycont>
</object>
</object>
<object id='License' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
</tomanycont>
</object>
<object id='HW' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Store' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='vxsvc_perc2pro_580' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
vxsvc_perc2pro_580
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="regex" mode="w" >
PERC 3/Di Controller (?P&lt;eventKey&gt;\S+) , battery low.
</property>
<property type="string" id="example" mode="w" >
PERC 3/Di Controller 0 , battery low.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/HW/Store'/>
</object>
</tomanycont>
</object>
<object id='Power' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='cpqasm2_4154' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
cpqasm2_4154
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
The power sub-system is no longer redundant.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/HW/Power'/>
</object>
<object id='cpqasm2_4173' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
cpqasm2_4173
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
<property type="string" id="example" mode="w" >
Power supply #2 has failed.
</property>
<toone id='eventClass' objid='/zport/dmd/Events/HW/Power'/>
</object>
</tomanycont>
</object>
</object>
<object id='Perf' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Snmp' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='XmlRpc' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='CPU' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Memory' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Filesystem' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Interface' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Process' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
</object>
<object id='Change' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<object id='Add' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Blocked' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
</object>
<object id='Remove' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Blocked' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
</object>
<object id='Set' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Blocked' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
</object>
</object>
<object id='Cmd' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='Ok' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Fail' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
</object>
</object>
</objects>
